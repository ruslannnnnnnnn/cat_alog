// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: catservice.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DateOfBirth   string                 `protobuf:"bytes,2,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCatRequest) Reset() {
	*x = CreateCatRequest{}
	mi := &file_catservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatRequest) ProtoMessage() {}

func (x *CreateCatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatRequest.ProtoReflect.Descriptor instead.
func (*CreateCatRequest) Descriptor() ([]byte, []int) {
	return file_catservice_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCatRequest) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *CreateCatRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GetCatByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCatByIdRequest) Reset() {
	*x = GetCatByIdRequest{}
	mi := &file_catservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCatByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatByIdRequest) ProtoMessage() {}

func (x *GetCatByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCatByIdRequest) Descriptor() ([]byte, []int) {
	return file_catservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetCatByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllCatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint64                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage       uint32                 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllCatsRequest) Reset() {
	*x = GetAllCatsRequest{}
	mi := &file_catservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllCatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCatsRequest) ProtoMessage() {}

func (x *GetAllCatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCatsRequest.ProtoReflect.Descriptor instead.
func (*GetAllCatsRequest) Descriptor() ([]byte, []int) {
	return file_catservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllCatsRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllCatsRequest) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type CreateCatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCatResponse) Reset() {
	*x = CreateCatResponse{}
	mi := &file_catservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatResponse) ProtoMessage() {}

func (x *CreateCatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatResponse.ProtoReflect.Descriptor instead.
func (*CreateCatResponse) Descriptor() ([]byte, []int) {
	return file_catservice_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCatResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCatByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cat           *Cat                   `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCatByIdResponse) Reset() {
	*x = GetCatByIdResponse{}
	mi := &file_catservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCatByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatByIdResponse) ProtoMessage() {}

func (x *GetCatByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCatByIdResponse) Descriptor() ([]byte, []int) {
	return file_catservice_proto_rawDescGZIP(), []int{4}
}

func (x *GetCatByIdResponse) GetCat() *Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type Cat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DateOfBirth   string                 `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cat) Reset() {
	*x = Cat{}
	mi := &file_catservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cat) ProtoMessage() {}

func (x *Cat) ProtoReflect() protoreflect.Message {
	mi := &file_catservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cat.ProtoReflect.Descriptor instead.
func (*Cat) Descriptor() ([]byte, []int) {
	return file_catservice_proto_rawDescGZIP(), []int{5}
}

func (x *Cat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cat) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *Cat) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GetAllCatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cats          []*Cat                 `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllCatsResponse) Reset() {
	*x = GetAllCatsResponse{}
	mi := &file_catservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllCatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCatsResponse) ProtoMessage() {}

func (x *GetAllCatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCatsResponse.ProtoReflect.Descriptor instead.
func (*GetAllCatsResponse) Descriptor() ([]byte, []int) {
	return file_catservice_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllCatsResponse) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

var File_catservice_proto protoreflect.FileDescriptor

var file_catservice_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x63, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x63, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x67,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x22, 0x23, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x63,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74, 0x22, 0x6a,
	0x0a, 0x03, 0x43, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x39, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x52,
	0x04, 0x63, 0x61, 0x74, 0x73, 0x32, 0xf0, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x2e, 0x63, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x73, 0x12,
	0x1d, 0x2e, 0x63, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x63, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x61,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x61, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x63, 0x61, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_catservice_proto_rawDescOnce sync.Once
	file_catservice_proto_rawDescData []byte
)

func file_catservice_proto_rawDescGZIP() []byte {
	file_catservice_proto_rawDescOnce.Do(func() {
		file_catservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_catservice_proto_rawDesc), len(file_catservice_proto_rawDesc)))
	})
	return file_catservice_proto_rawDescData
}

var file_catservice_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_catservice_proto_goTypes = []any{
	(*CreateCatRequest)(nil),   // 0: catservice.CreateCatRequest
	(*GetCatByIdRequest)(nil),  // 1: catservice.GetCatByIdRequest
	(*GetAllCatsRequest)(nil),  // 2: catservice.GetAllCatsRequest
	(*CreateCatResponse)(nil),  // 3: catservice.CreateCatResponse
	(*GetCatByIdResponse)(nil), // 4: catservice.GetCatByIdResponse
	(*Cat)(nil),                // 5: catservice.Cat
	(*GetAllCatsResponse)(nil), // 6: catservice.GetAllCatsResponse
}
var file_catservice_proto_depIdxs = []int32{
	5, // 0: catservice.GetCatByIdResponse.cat:type_name -> catservice.Cat
	5, // 1: catservice.GetAllCatsResponse.cats:type_name -> catservice.Cat
	1, // 2: catservice.CatService.GetCatById:input_type -> catservice.GetCatByIdRequest
	2, // 3: catservice.CatService.GetAllCats:input_type -> catservice.GetAllCatsRequest
	0, // 4: catservice.CatService.CreateCat:input_type -> catservice.CreateCatRequest
	4, // 5: catservice.CatService.GetCatById:output_type -> catservice.GetCatByIdResponse
	6, // 6: catservice.CatService.GetAllCats:output_type -> catservice.GetAllCatsResponse
	3, // 7: catservice.CatService.CreateCat:output_type -> catservice.CreateCatResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_catservice_proto_init() }
func file_catservice_proto_init() {
	if File_catservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_catservice_proto_rawDesc), len(file_catservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_catservice_proto_goTypes,
		DependencyIndexes: file_catservice_proto_depIdxs,
		MessageInfos:      file_catservice_proto_msgTypes,
	}.Build()
	File_catservice_proto = out.File
	file_catservice_proto_goTypes = nil
	file_catservice_proto_depIdxs = nil
}
